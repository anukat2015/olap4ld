==2013-02-08 - ParseTree to SPARQL query==


==2013-02-07==
* Added to Tomcat for executing Saiku: "set CATALINA_OPTS=-Xms512m -Xmx768m -XX:MaxPermSize=256m -Dfile.encoding=UTF-8 
-Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true" , as explained here: 
http://ask.analytical-labs.com/questions/943/saiku-dont-execute-in-the-browser?focusedAnswerId=1143&sort=votes&page=2

* Logging refactored: Logging is enabled/disabled in LdOlap4jDriver.java (line 193):
** Disabled: LdOlap4jUtil._log.setLevel(Level.SEVERE);
** Enabled: LdOlap4jUtil._log.setLevel(Level.INFO);

===Problem: LinkedDataEngine may be called many times synchronously===
* So far, we have one LinkedDataEngine per Connection. 
* However, several metadata lists may get populated at the same time. Also, Saiku may be used by
several people at the same time. 
* Currently, the LinkedDataEngine has a state, since it has the current context stored as object
properties. 
* Solution: We create an internal class similar to "context", that stores the needed names from 
restrictions.  

===Problem: Created MDX in Saiku does not surround entity names with square brackets===
* The MDX parser requires entity names to be wrapped by square brackets.
* So far, only a cubes unique name is wrapped by square brackets. 
* All other elements are defined by XmlaOlap4jElement and they do not add square brackets.
* To consider
** Unique names of elements are used for filtering in SPARQL queries.
* Possible Solution: We just add the brackets as "MDX"-specific. 
** However, we should only transform SPARQL outputs if they are needed in MDX.
* Next problem: From segment identifier objects, the [] are already removed.
* Any possibility to know the cube when we are looking for an identifier?

===Problem: How about tree operators===
* Currently, if tree operators are used, we assume that we are looking for a measure member.
* Now that we do not have applyRestrictions any more, it becomes more difficult.
* The following treeOps are possible:
** Interesting: 
	 * <p>The <code>treeOps</code> parameter allows you to retrieve members
     * relative to a given member. It is only applicable if a
     * <code>memberUniqueName</code> is also specified; otherwise it is
     * ignored. The following example retrieves all descendants and ancestors
     * of California, but not California itself:
** Parent, Siblings, Children, Self, Ancestors, Descendants

==2013-02-03==
* Problem: If we run a test on data sources with metadata queries, olap4ld does not yet know
how to translate prefixes to URIs. If I run OLAP queries, it does not since it populates the object
metadata and gives names to all multidimensional elements. However, for metadata queries, it does
not do it. After a metadata query is issued, for output, the elements are translated to MDX 
expressions, i.e., after output, the prefixes are known. That means, for metadata queries, we have 
to first query for cubes, then dimensions, then hierarchies etc. 

* Solution: We use prefixes as mentioned in the standardprefixes.csv. If we do not find prefixes,
we encode the URLs ourselves. This will not be pretty, but for those reasons we need labels.  
* Next solution: We now use Base64, since it would completely encode a URI and would hopefully 
not leave any problematic characters (http://blog.axxg.de/2012/02/java-kodierung-base64/)
* For that, we had to add apache commons (http://commons.apache.org/codec/apidocs/overview-summary.html)
* Note: Base64 had to be used with 0 linelength so that it would not add a linebreak.
* Encoding/Decoding yourself at: http://www.yellowpipe.com/yis/tools/encrypter/index.php

==2013-01-31==
* Measures and aggregation functions: We say that the aggregation function of a measure is inherent 
to the measure, i.e., it has to define itself how it aggregates if viewed from a lower granularity.
From a measure, you can always derive new measures.   

==2013-01-19==
* When filtering for members in SSB, I had to use function str(), otherwise I got an error "Virtuoso 22005 Error SR130 Bad type VARCHAR".

==2013-01-17==
* getSchemas and getCatalogs return different columns than previously used. See API.
* Wildcards disabled: http://www.w3schools.com/sql/sql_wildcards.asp

==2012-03-28==
* Encoding all to UTF-8
* Testing now works
* Implementing of SPARQL concept 

==2012-01-31==
* License added
* CROSSJOIN added

==2012-01-29==
* Add ordering for getXXX methods in LinkedDataEngine, according to [1]
* Add handling of names
* TODO: Clean up (old methods, VisitorClasses...) 


[1] <http://olap4j.svn.sourceforge.net/viewvc/olap4j/trunk/doc/olap4j_fs.html#The_OlapDatabaseMetaData_interface_and_methods_which_return_schema_rowsets>

==2012-01-28==
* Tested with Saiku-2.2RC1
* Filter axis supported
* Single measures supported

==2012-01-22==
* OLAP4LD does not require mondrian or MySQL server, anymore.
* No results are given, yet.

==2011-12-12==
* README added

==2011-11-21==
* Supports OpenVirtuoso triple store
